/*Disable horizontal scroll*/
html,
body {
    max-width: 100%;
    overflow-x: hidden;
}

/* Set color and font for every item. Also set margins */
body {
    font-family: 'Mina', sans-serif;
    color: #000000;
    margin: 0;
    padding: 0;
    overflow-x: hidden;
}

/* 
Displayed header as flex for keeping space between

Set color, margins, and size to match mockup for mobile first
layout
*/
header {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
    align-items: center;
    padding: .5em 1.3em;
    background-color: #4eb6ff;


    /*Added some hover features for user input*/
    h1 {
        margin: 0;
        font-size: 1.6em;
        border-top: transparent dashed 1px;
        border-bottom: transparent dashed 1px;
    }

    h1:hover {
        border-bottom-color: #000000;
        cursor: pointer;
    }

    #cartIcon {
        width: 2.3em;
        border-top: transparent dashed 1px;
        border-bottom: transparent dashed 1px;
    }

    #cartIcon:hover {
        border-bottom-color: #000000;
        cursor: pointer;
    }
}

/* 
Set main body to be a collumn, centered for ability to shift elements
left or right
*/
main {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 0 .5em;

    #searchBar {
        width: 100%;
        margin: 1.5em;
        height: 3em;
        font-family: 'Mina', sans-serif;
    }

    h2 {
        width: 100%;
        box-sizing: border-box;
        margin: 0;
        display: inline-block;
        font-weight: 600;
    }
}

/*
Product container for holding the javascript elements.
Utilize flex for making rows match requirments.
Aspect ratio may cause a small stretch in image, but matches UI mockup
*/
#productContainer {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    margin: .5em 2em;
    column-gap: 2em;
    width: 100%;


    .product {
        flex-basis: 40%;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        border-top: transparent dashed 2px;

        img {
            width: 100%;
            aspect-ratio: 1/1;
        }


        h2 {
            font-size: 1.3em;
        }

        h5 {
            margin-top: .3em;
            font-size: 1em;
        }
    }

    .product:hover {
        cursor: pointer;
        border-color: #000000;
    }
}

/* 
Styles for devices 430px and up
Set flex-basis to fit 3 per row now, enlarged gap and 
set max content width for full screens
 */
@media screen and (min-width: 430px) {

    #productContainer {
        column-gap: 2.3em;
        max-width: 1000px;

        .product {
            flex-basis: 25%;
        }
    }
}

/*
Using the new classList "content-loaded" able to only apply transition
to the products being called, not the loading... part
*/
#productContainer.content-loaded {
    animation: transitionIn 0.75s;
}

/*
A past keyframe I have found success with
*/
@keyframes transitionIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}